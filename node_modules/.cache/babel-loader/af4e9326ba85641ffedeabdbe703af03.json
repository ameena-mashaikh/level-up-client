{"ast":null,"code":"var _jsxFileName = \"/home/ameenam/workspace/level-up-react-18-template/src/components/game/EventForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { createEvent, getGamers } from '../../managers/EventManager.js';\nimport { getGames } from \"../../managers/GameManager.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EventForm = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [games, setGame] = useState([]);\n  const [gamers, setGamer] = useState([]);\n  /*\n      Since the input fields are bound to the values of\n      the properties of this state variable, you need to\n      provide some default values.\n  */\n\n  const [currentEvent, setCurrentEvent] = useState({\n    gameId: 0,\n    description: \"\",\n    date: \"\",\n    time: \"\",\n    gamerId: 0\n  });\n  useEffect(() => {\n    getGamers().then(setGamer);\n  }, []);\n  useEffect(() => {\n    getGames().then(setGame);\n  }, []);\n\n  const changeEventState = domEvent => {\n    // TODO: Complete the onChange function\n    // domEvent.preventDefault()\n    // const newGame = Object.assign({}, currentGame)\n    // newGame[domEvent.target.title] = domEvent.target.value\n    // setCurrentGame(newGame)\n    const copy = { ...currentEvent\n    };\n    copy[domEvent.target.id] = domEvent.target.value;\n    setCurrentEvent(copy);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"eventForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"eventForm__title\",\n      children: \"Schedule New Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"gameId\",\n          children: \"Game: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: changeEventState,\n          id: \"gameId\",\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            children: \"Select a Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), games.map(game => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: `${game.id}`,\n              children: game.title\n            }, `game--${game.id}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 32\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeEventState,\n          type: \"text\",\n          id: \"description\",\n          required: true,\n          autoFocus: true,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Date of Event: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeEventState,\n          type: \"date\",\n          name: \"date\",\n          required: true,\n          autoFocus: true,\n          className: \"form-control\",\n          id: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"time\",\n          children: \"Start Time: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeEventState,\n          type: \"time\",\n          name: \"time\",\n          required: true,\n          autoFocus: true,\n          className: \"form-control\",\n          id: \"time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: evt => {\n        // Prevent form from being submitted\n        evt.preventDefault();\n        const event = {\n          game: parseInt(currentEvent.gameId),\n          description: currentEvent.description,\n          date: currentEvent.date,\n          time: currentEvent.time,\n          gamer: 0\n        }; // Send POST request to your API\n\n        createEvent(event).then(() => navigate(\"/events\"));\n      },\n      className: \"btn btn-primary\",\n      children: \"Create Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EventForm, \"S5EqpxltiHmx5VPGwezNRyBTr9Q=\", false, function () {\n  return [useNavigate];\n});\n\n_c = EventForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["useState","useEffect","useNavigate","createEvent","getGamers","getGames","EventForm","navigate","games","setGame","gamers","setGamer","currentEvent","setCurrentEvent","gameId","description","date","time","gamerId","then","changeEventState","domEvent","copy","target","id","value","map","game","title","evt","preventDefault","event","parseInt","gamer"],"sources":["/home/ameenam/workspace/level-up-react-18-template/src/components/game/EventForm.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport { useNavigate } from 'react-router-dom'\nimport { createEvent, getGamers} from '../../managers/EventManager.js'\nimport { getGames } from \"../../managers/GameManager.js\"\n\n\nexport const EventForm = () => {\n    const navigate = useNavigate()\n    const [games, setGame] = useState([])\n    const [gamers, setGamer] = useState([])\n\n\n    /*\n        Since the input fields are bound to the values of\n        the properties of this state variable, you need to\n        provide some default values.\n    */\n    const [currentEvent, setCurrentEvent] = useState({\n        gameId: 0,\n        description: \"\",\n        date: \"\",\n        time: \"\",\n        gamerId: 0\n    })\n\n    useEffect(() => {\n        getGamers().then(setGamer)\n    }, [])\n\n    useEffect(() => {\n        getGames().then(setGame)\n    }, [])\n\n\n    const changeEventState = (domEvent) => {\n        // TODO: Complete the onChange function\n        // domEvent.preventDefault()\n        // const newGame = Object.assign({}, currentGame)\n        // newGame[domEvent.target.title] = domEvent.target.value\n        // setCurrentGame(newGame)\n        const copy = { ...currentEvent }\n        copy[domEvent.target.id] = domEvent.target.value\n        setCurrentEvent(copy)\n        }\n\n    return (\n        <form className=\"eventForm\">\n            <h2 className=\"eventForm__title\">Schedule New Event</h2>\n            <fieldset>\n                <div className=\"form-group\">\n                <label htmlFor=\"gameId\">Game: </label>\n                <select \n                    onChange={changeEventState}\n                    id=\"gameId\" className=\"form-control\" \n                    >\n\n                    <option value=\"0\">Select a Game</option>\n                    {\n                    games.map((game) => {\n                        return <option value={`${game.id}`} key={`game--${game.id}`}>{game.title}</option>\n                    })\n                    }\n                </select>\n                </div>\n            </fieldset>\n\n            {/* TODO: create the rest of the input fields */}\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"description\">Description: </label>\n                    <input \n                    onChange={changeEventState}\n                        type=\"text\" id = 'description' required autoFocus className=\"form-control\"\n                    />\n                </div>\n            </fieldset>\n\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"date\">Date of Event: </label>\n                    <input \n                        onChange={changeEventState}\n                        type=\"date\" name=\"date\" required autoFocus className=\"form-control\"\n                        id = 'date'\n                    />\n                </div>\n            </fieldset>\n\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"time\">Start Time: </label>\n                    <input \n                        onChange={changeEventState}\n                        type=\"time\" name=\"time\" required autoFocus className=\"form-control\"\n                        id = 'time'\n                    />\n                </div>\n            </fieldset>\n            \n\n            <button type=\"submit\"\n                onClick={evt => {\n                    // Prevent form from being submitted\n                    evt.preventDefault()\n\n                    const event = {\n                        game: parseInt(currentEvent.gameId),\n                        description: currentEvent.description,\n                        date: currentEvent.date,\n                        time: currentEvent.time,\n                        gamer: 0\n                    }\n\n                    // Send POST request to your API\n                    createEvent(event)\n                        .then(() => navigate(\"/events\"))\n                }}\n                className=\"btn btn-primary\">Create Event</button>\n        </form>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}