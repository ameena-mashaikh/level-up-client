{"ast":null,"code":"var _jsxFileName = \"/home/ameenam/workspace/level-up-react-18-template/src/components/game/GameForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { createGame, getGameTypes, getGames } from '../../managers/GameManager.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GameForm = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [gameTypes, setGameTypes] = useState([]);\n  /*\n      Since the input fields are bound to the values of\n      the properties of this state variable, you need to\n      provide some default values.\n  */\n\n  const [currentGame, setCurrentGame] = useState({\n    skillLevel: 1,\n    numberOfPlayers: 1,\n    title: \"\",\n    maker: \"\",\n    gameTypeId: 0\n  });\n  useEffect(() => {\n    getGameTypes().then(gameTypeData => setGameTypes(gameTypeData));\n  }, []);\n\n  const changeGameState = domEvent => {\n    // TODO: Complete the onChange function\n    domEvent.preventDefault();\n    const newGame = Object.assign({}, currentGame);\n    newGame[domEvent.target.title] = domEvent.target.value;\n    setCurrentGame(newGame);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"gameForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"gameForm__title\",\n      children: \"Register New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          // onChange={\n          //     (evt) => {\n          //         const copy = {...currentGame}\n          //         copy.title = evt.target.value\n          //         setCurrentGame(copy)\n          //     }\n          // }\n          type: \"text\",\n          name: \"title\",\n          required: true,\n          autoFocus: true,\n          className: \"form-control\",\n          defaultValue: currentGame.title,\n          onChange: changeGameState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Maker: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          //  onChange={\n          //     (evt) => {\n          //         const copy = {...currentGame}\n          //         copy.maker = evt.target.value\n          //         setCurrentGame(copy)\n          //     }\n          // }\n          type: \"text\",\n          required: true,\n          autoFocus: true,\n          className: \"form-control\",\n          defaultValue: currentGame.maker,\n          onChange: changeGameState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"gameTypeId\",\n          children: \"Game Type: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          // onChange={\n          //     (evt) => {\n          //         const copy = {...currentGame}\n          //         copy.gameTypeId = evt.target.value\n          //         setCurrentGame(copy)\n          //     }\n          // }\n          name: \"game_type_id\",\n          className: \"form-control\",\n          defaultValue: currentGame.gameTypeId,\n          onChange: changeGameState,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            children: \"Select a Game Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), gameTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type.id,\n            children: type.label\n          }, type.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"skillLevel\",\n          children: \"Skill Level: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          // onChange={\n          //     (evt) => {\n          //         const copy = {...currentGame}\n          //         copy.skillLevel = evt.target.value\n          //         setCurrentGame(copy)\n          //     }\n          // }\n          type: \"number\",\n          name: \"skill_level\",\n          min: \"1\",\n          max: \"10\",\n          required: true,\n          autoFocus: true,\n          className: \"form-control\",\n          defaultValue: currentGame.skillLevel,\n          onChange: changeGameState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"numberOfPlayers\",\n          children: \"Number of players: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"number_of_players\",\n          min: \"1\",\n          max: \"10\",\n          required: true,\n          autoFocus: true,\n          className: \"form-control\",\n          defaultValue: currentGame.numberOfPlayers,\n          onChange: changeGameState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: evt => {\n        // Prevent form from being submitted\n        evt.preventDefault();\n        const game = {\n          maker: currentGame.maker,\n          title: currentGame.title,\n          number_of_players: parseInt(currentGame.numberOfPlayers),\n          skill_level: parseInt(currentGame.skillLevel),\n          game_type: parseInt(currentGame.gameTypeId)\n        }; // Send POST request to your API\n\n        createGame(game).then(() => navigate(\"/games\"));\n      },\n      className: \"btn btn-primary\",\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GameForm, \"4ysbY+E/SeMKnwCOOqL97452WX4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = GameForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameForm\");","map":{"version":3,"names":["useState","useEffect","useNavigate","createGame","getGameTypes","getGames","GameForm","navigate","gameTypes","setGameTypes","currentGame","setCurrentGame","skillLevel","numberOfPlayers","title","maker","gameTypeId","then","gameTypeData","changeGameState","domEvent","preventDefault","newGame","Object","assign","target","value","map","type","id","label","evt","game","number_of_players","parseInt","skill_level","game_type"],"sources":["/home/ameenam/workspace/level-up-react-18-template/src/components/game/GameForm.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport { useNavigate } from 'react-router-dom'\nimport { createGame, getGameTypes, getGames } from '../../managers/GameManager.js'\n\n\nexport const GameForm = () => {\n    const navigate = useNavigate()\n    const [gameTypes, setGameTypes] = useState([])\n\n    /*\n        Since the input fields are bound to the values of\n        the properties of this state variable, you need to\n        provide some default values.\n    */\n    const [currentGame, setCurrentGame] = useState({\n        skillLevel: 1,\n        numberOfPlayers: 1,\n        title: \"\",\n        maker: \"\",\n        gameTypeId: 0\n    })\n\n    useEffect(() => {\n        getGameTypes().then(gameTypeData => setGameTypes(gameTypeData))\n      }, [])\n\n    const changeGameState = (domEvent) => {\n        // TODO: Complete the onChange function\n        domEvent.preventDefault()\n        const newGame = Object.assign({}, currentGame)\n        newGame[domEvent.target.title] = domEvent.target.value\n        setCurrentGame(newGame)\n        }\n\n    return (\n        <form className=\"gameForm\">\n            <h2 className=\"gameForm__title\">Register New Game</h2>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\">Title: </label>\n                    <input \n                        // onChange={\n                        //     (evt) => {\n                        //         const copy = {...currentGame}\n                        //         copy.title = evt.target.value\n                        //         setCurrentGame(copy)\n                        //     }\n                        // }\n                        type=\"text\" name=\"title\" required autoFocus className=\"form-control\"\n                        defaultValue={currentGame.title}\n                        onChange={changeGameState}\n                    />\n                </div>\n            </fieldset>\n\n            {/* TODO: create the rest of the input fields */}\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\">Maker: </label>\n                    <input \n                    //  onChange={\n                    //     (evt) => {\n                    //         const copy = {...currentGame}\n                    //         copy.maker = evt.target.value\n                    //         setCurrentGame(copy)\n                    //     }\n                    // }\n                        type=\"text\" required autoFocus className=\"form-control\"\n                        defaultValue={currentGame.maker}\n                        onChange={changeGameState}\n                    />\n                </div>\n            </fieldset>\n\n            <fieldset>\n                <div className=\"form-group\">\n                <label htmlFor=\"gameTypeId\">Game Type: </label>\n                <select \n                // onChange={\n                //     (evt) => {\n                //         const copy = {...currentGame}\n                //         copy.gameTypeId = evt.target.value\n                //         setCurrentGame(copy)\n                //     }\n                // }\n                    name=\"game_type_id\" className=\"form-control\"\n                    defaultValue={currentGame.gameTypeId}\n                    onChange={changeGameState}\n                    >\n\n                    <option value=\"0\">Select a Game Type</option>\n                    {\n                    gameTypes.map(type => (\n                        <option key={type.id} value={type.id}>\n                        {type.label}\n                        </option>\n                    ))\n                    }\n                </select>\n                </div>\n            </fieldset>\n\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"skillLevel\">Skill Level: </label>\n                    <input \n                    // onChange={\n                    //     (evt) => {\n                    //         const copy = {...currentGame}\n                    //         copy.skillLevel = evt.target.value\n                    //         setCurrentGame(copy)\n                    //     }\n                    // }\n                        type=\"number\" name=\"skill_level\" min = \"1\" max = \"10\" required autoFocus className=\"form-control\"\n                        defaultValue={currentGame.skillLevel}\n                        onChange={changeGameState}\n                    />\n                </div>\n            </fieldset>\n            \n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"numberOfPlayers\">Number of players: </label>\n                    <input \n                    \n                        type=\"number\" name=\"number_of_players\" min = \"1\" max = \"10\" required autoFocus className=\"form-control\"\n                        defaultValue={currentGame.numberOfPlayers}\n                        onChange={changeGameState}\n                    />\n                </div>\n            </fieldset>\n\n            <button type=\"submit\"\n                onClick={evt => {\n                    // Prevent form from being submitted\n                    evt.preventDefault()\n\n                    const game = {\n                        maker: currentGame.maker,\n                        title: currentGame.title,\n                        number_of_players: parseInt(currentGame.numberOfPlayers),\n                        skill_level: parseInt(currentGame.skillLevel),\n                        game_type: parseInt(currentGame.gameTypeId)\n                    }\n\n                    // Send POST request to your API\n                    createGame(game)\n                        .then(() => navigate(\"/games\"))\n                }}\n                className=\"btn btn-primary\">Create</button>\n        </form>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}