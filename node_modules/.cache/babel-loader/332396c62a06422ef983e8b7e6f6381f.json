{"ast":null,"code":"var _jsxFileName = \"/home/ameenam/workspace/level-up-react-18-template/src/components/game/GameEdit.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { createGame, getGameTypes, getGames, getGameById, updateGame } from '../../managers/GameManager.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GameEdit = () => {\n  _s();\n\n  var _currentGame$game_typ;\n\n  const navigate = useNavigate();\n  const {\n    gameId\n  } = useParams();\n  const [gameTypes, setGameTypes] = useState([]);\n  /*\n      Since the input fields are bound to the values of\n      the properties of this state variable, you need to\n      provide some default values.\n  */\n\n  const [currentGame, setCurrentGame] = useState({\n    id: 0,\n    game_type: 0,\n    title: \"\",\n    maker: \"\",\n    number_of_players: 1,\n    skill_level: 1\n  });\n  useEffect(() => {\n    getGameTypes().then(setGameTypes);\n  }, []);\n  useEffect(() => {\n    getGameById(gameId).then(setCurrentGame);\n  }, []);\n\n  const changeGameState = domEvent => {\n    // TODO: Complete the onChange function\n    domEvent.preventDefault(); // const newGame = Object.assign({}, currentGame)\n    // newGame[domEvent.target.title] = domEvent.target.value\n    // setCurrentGame(newGame)\n\n    const copy = { ...currentGame\n    };\n    let modify = domEvent.target.id;\n    copy[modify] = domEvent.target.value;\n    setCurrentGame(copy);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"gameForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"gameForm__title\",\n      children: [\"Edit: \", currentGame === null || currentGame === void 0 ? void 0 : currentGame.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeGameState,\n          type: \"text\",\n          id: \"title\",\n          required: true,\n          autoFocus: true,\n          className: \"form-control\",\n          value: currentGame === null || currentGame === void 0 ? void 0 : currentGame.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"maker\",\n          children: \"Maker: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          //  onChange={\n          //     (evt) => {\n          //         const copy = {...currentGame}\n          //         copy.maker = evt.target.value\n          //         setCurrentGame(copy)\n          //     }\n          // }\n          onChange: changeGameState,\n          type: \"text\",\n          id: \"maker\",\n          required: true,\n          autoFocus: true,\n          className: \"form-control\",\n          value: currentGame === null || currentGame === void 0 ? void 0 : currentGame.maker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"gameTypeId\",\n          children: \"Game Type: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: changeGameState,\n          id: \"game_type\",\n          className: \"form-control\",\n          value: currentGame === null || currentGame === void 0 ? void 0 : (_currentGame$game_typ = currentGame.game_type) === null || _currentGame$game_typ === void 0 ? void 0 : _currentGame$game_typ.id,\n          children: gameTypes.map(type => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              value: `${type.id}`,\n              children: type.label\n            }, `type--${type.id}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 32\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"skillLevel\",\n          children: \"Skill Level: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          // onChange={\n          //     (evt) => {\n          //         const copy = {...currentGame}\n          //         copy.skillLevel = evt.target.value\n          //         setCurrentGame(copy)\n          //     }\n          // }\n          onChange: changeGameState,\n          type: \"number\",\n          min: \"1\",\n          max: \"10\",\n          required: true,\n          autoFocus: true,\n          className: \"form-control\",\n          id: \"skill_level\",\n          value: currentGame === null || currentGame === void 0 ? void 0 : currentGame.skill_level\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"numberOfPlayers\",\n          children: \"Number of players: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeGameState,\n          type: \"number\",\n          name: \"number_of_players\",\n          min: \"1\",\n          max: \"10\",\n          required: true,\n          autoFocus: true,\n          className: \"form-control\",\n          id: \"number_of_players\",\n          value: currentGame === null || currentGame === void 0 ? void 0 : currentGame.number_of_players\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: evt => {\n        // Prevent form from being submitted\n        evt.preventDefault();\n        const game = {\n          game_type: parseInt(currentGame.game_type),\n          title: currentGame.title,\n          maker: currentGame.maker,\n          number_of_players: parseInt(currentGame.number_of_players),\n          skill_level: parseInt(currentGame.skill_level),\n          id: parseInt(currentGame.id)\n        }; // Send POST request to your API\n\n        updateGame(game).then(() => navigate(\"/games\"));\n      },\n      className: \"btn btn-primary\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GameEdit, \"PgLvcyxgurfuk6+VVN+qWMab7YI=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = GameEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameEdit\");","map":{"version":3,"names":["useState","useEffect","useNavigate","useParams","createGame","getGameTypes","getGames","getGameById","updateGame","GameEdit","navigate","gameId","gameTypes","setGameTypes","currentGame","setCurrentGame","id","game_type","title","maker","number_of_players","skill_level","then","changeGameState","domEvent","preventDefault","copy","modify","target","value","map","type","label","evt","game","parseInt"],"sources":["/home/ameenam/workspace/level-up-react-18-template/src/components/game/GameEdit.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport { useNavigate, useParams} from 'react-router-dom'\nimport { createGame, getGameTypes, getGames, getGameById, updateGame } from '../../managers/GameManager.js'\n\n\nexport const GameEdit = () => {\n    const navigate = useNavigate()\n    const {gameId} = useParams()\n    const [gameTypes, setGameTypes] = useState([])\n\n    /*\n        Since the input fields are bound to the values of\n        the properties of this state variable, you need to\n        provide some default values.\n    */\n    const [currentGame, setCurrentGame] = useState({\n        id:0,\n        game_type: 0,\n        title: \"\",\n        maker: \"\",\n        number_of_players: 1,\n        skill_level: 1\n    })\n    \n\n\n    useEffect(() => {\n        getGameTypes().then(setGameTypes)\n      }, [])\n\n\n\n    useEffect(() => {\n        getGameById(gameId)\n        .then(setCurrentGame)\n        }, [])\n\n\n\n    const changeGameState = (domEvent) => {\n        // TODO: Complete the onChange function\n        domEvent.preventDefault()\n        // const newGame = Object.assign({}, currentGame)\n        // newGame[domEvent.target.title] = domEvent.target.value\n        // setCurrentGame(newGame)\n        const copy = { ...currentGame }\n        let modify = domEvent.target.id\n        copy[modify] = domEvent.target.value\n        setCurrentGame(copy)\n        }\n\n    return (\n        <form className=\"gameForm\">\n            <h2 className=\"gameForm__title\">Edit: {currentGame?.title}</h2>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\">Title: </label>\n                    <input \n                        onChange={changeGameState}\n                        type=\"text\" id = 'title' required autoFocus className=\"form-control\"\n                        value = {currentGame?.title}\n                    />\n                </div>\n            </fieldset>\n\n            {/* TODO: create the rest of the input fields */}\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"maker\">Maker: </label>\n                    <input \n                    //  onChange={\n                    //     (evt) => {\n                    //         const copy = {...currentGame}\n                    //         copy.maker = evt.target.value\n                    //         setCurrentGame(copy)\n                    //     }\n                    // }\n                    onChange={changeGameState}\n                        type=\"text\" id = 'maker' required autoFocus className=\"form-control\"\n                        value = {currentGame?.maker}\n                    />\n                </div>\n            </fieldset>\n\n            <fieldset>\n                <div className=\"form-group\">\n                <label htmlFor=\"gameTypeId\">Game Type: </label>\n                <select \n                    onChange={changeGameState}\n                    id=\"game_type\" className=\"form-control\" value = {currentGame?.game_type?.id}\n                    >\n                    {\n                    gameTypes.map((type) => {\n                        return <option selected value={`${type.id}`} key={`type--${type.id}`}>{type.label}</option>\n                    })\n                    }\n                </select>\n                </div>\n            </fieldset>\n\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"skillLevel\">Skill Level: </label>\n                    <input \n                    // onChange={\n                    //     (evt) => {\n                    //         const copy = {...currentGame}\n                    //         copy.skillLevel = evt.target.value\n                    //         setCurrentGame(copy)\n                    //     }\n                    // }\n                        onChange={changeGameState}\n                        type=\"number\" min = \"1\" max = \"10\" required autoFocus className=\"form-control\"\n                        id = 'skill_level' value = {currentGame?.skill_level}\n                    />\n                </div>\n            </fieldset>\n            \n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"numberOfPlayers\">Number of players: </label>\n                    <input \n                    \n                    onChange={changeGameState}\n                        type=\"number\" name=\"number_of_players\" min = \"1\" max = \"10\" required autoFocus className=\"form-control\"\n                        id = 'number_of_players' value = {currentGame?.number_of_players}\n                    />\n                </div>\n            </fieldset>\n\n            <button type=\"submit\"\n                onClick={evt => {\n                    // Prevent form from being submitted\n                    evt.preventDefault()\n\n                    const game = {\n                        game_type: parseInt(currentGame.game_type),\n                        title: currentGame.title,\n                        maker: currentGame.maker,\n                        number_of_players: parseInt(currentGame.number_of_players),\n                        skill_level: parseInt(currentGame.skill_level),\n                        id: parseInt(currentGame.id)\n                    }\n\n                    // Send POST request to your API\n                    updateGame(game)\n                        .then(() => navigate(\"/games\"))\n                }}\n                className=\"btn btn-primary\">Save</button>\n        </form>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}