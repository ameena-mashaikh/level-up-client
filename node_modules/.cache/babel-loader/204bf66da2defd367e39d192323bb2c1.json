{"ast":null,"code":"var _jsxFileName = \"/home/ameenam/workspace/level-up-react-18-template/src/components/game/EventEdit.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { createEvent, getGamers, updateEvent } from '../../managers/EventManager.js';\nimport { getGames } from \"../../managers/GameManager.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EventEdit = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [games, setGame] = useState([]);\n  const [gamers, setGamer] = useState([]);\n  const [chosenGame, setChosenGame] = useState(0);\n  /*\n      Since the input fields are bound to the values of\n      the properties of this state variable, you need to\n      provide some default values.\n  */\n\n  const [currentEvent, setCurrentEvent] = useState({\n    game: 0,\n    description: \"\",\n    date: \"\",\n    time: \"\",\n    gamer: 0\n  });\n  useEffect(() => {\n    getGamers().then(setGamer);\n  }, []);\n  useEffect(() => {\n    getGames().then(setGame);\n  }, []);\n  useEffect(() => {\n    setChosenGame(currentEvent.game.id);\n  }, [currentEvent]);\n\n  const changeEventState = domEvent => {\n    // TODO: Complete the onChange function\n    // domEvent.preventDefault()\n    // const newGame = Object.assign({}, currentGame)\n    // newGame[domEvent.target.title] = domEvent.target.value\n    // setCurrentGame(newGame)\n    const copy = { ...currentEvent\n    };\n    const modify = domEvent.target.id;\n    copy[modify] = domEvent.target.value;\n    setCurrentEvent(copy);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"eventFormUpdate\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"eventForm__title\",\n      children: \"Update Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"gameId\",\n          children: \"Game: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"game\",\n          className: \"form-control\",\n          selected: true,\n          value: chosenGame,\n          onChange: evt => setChosenGame(event.target.value),\n          children: games.map(game => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: `${game.id}`,\n              children: game.title\n            }, `game--${game.id}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 32\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeEventState,\n          type: \"text\",\n          id: \"description\",\n          value: \"description\",\n          required: true,\n          autoFocus: true,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Date of Event: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeEventState,\n          type: \"date\",\n          value: \"date\",\n          required: true,\n          autoFocus: true,\n          className: \"form-control\",\n          id: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"time\",\n          children: \"Start Time: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeEventState,\n          type: \"time\",\n          value: \"time\",\n          required: true,\n          autoFocus: true,\n          className: \"form-control\",\n          id: \"time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: evt => {\n        // Prevent form from being submitted\n        evt.preventDefault();\n        const event = {\n          game: parseInt(currentEvent.game.id),\n          description: currentEvent.description,\n          date: currentEvent.date,\n          time: currentEvent.time,\n          gamer: parseInt(localStorage.getItem(\"level_user\"))\n        }; // Send POST request to your API\n\n        updateEvent(event).then(() => navigate(\"/events\"));\n      },\n      className: \"btn btn-primary\",\n      children: \"Update Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EventEdit, \"74LxhL3+YuAigWI38+0Kb3pVSZc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = EventEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventEdit\");","map":{"version":3,"names":["useState","useEffect","useNavigate","createEvent","getGamers","updateEvent","getGames","EventEdit","navigate","games","setGame","gamers","setGamer","chosenGame","setChosenGame","currentEvent","setCurrentEvent","game","description","date","time","gamer","then","id","changeEventState","domEvent","copy","modify","target","value","evt","event","map","title","preventDefault","parseInt","localStorage","getItem"],"sources":["/home/ameenam/workspace/level-up-react-18-template/src/components/game/EventEdit.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport { useNavigate } from 'react-router-dom'\nimport { createEvent, getGamers, updateEvent} from '../../managers/EventManager.js'\nimport { getGames } from \"../../managers/GameManager.js\"\n\n\nexport const EventEdit = () => {\n    const navigate = useNavigate()\n    const [games, setGame] = useState([])\n    const [gamers, setGamer] = useState([])\n    const [chosenGame, setChosenGame] = useState(0)\n\n    /*\n        Since the input fields are bound to the values of\n        the properties of this state variable, you need to\n        provide some default values.\n    */\n    const [currentEvent, setCurrentEvent] = useState({\n        game: 0,\n        description: \"\",\n        date: \"\",\n        time: \"\",\n        gamer: 0\n    })\n\n    useEffect(() => {\n        getGamers().then(setGamer)\n    }, [])\n\n    useEffect(() => {\n        getGames().then(setGame)\n    }, [])\n\n    useEffect(() => {\n        setChosenGame(currentEvent.game.id)\n        }, [currentEvent])\n\n\n\n    const changeEventState = (domEvent) => {\n        // TODO: Complete the onChange function\n        // domEvent.preventDefault()\n        // const newGame = Object.assign({}, currentGame)\n        // newGame[domEvent.target.title] = domEvent.target.value\n        // setCurrentGame(newGame)\n        const copy = { ...currentEvent }\n        const modify = domEvent.target.id\n        copy[modify] = domEvent.target.value\n        setCurrentEvent(copy)\n        }\n\n    return (\n        <form className=\"eventFormUpdate\">\n            <h2 className=\"eventForm__title\">Update Event</h2>\n            <fieldset>\n                <div className=\"form-group\">\n                <label htmlFor=\"gameId\">Game: </label>\n                <select \n                    id=\"game\" className=\"form-control\" selected value = {chosenGame} onChange= {evt => setChosenGame(event.target.value)}\n                    >\n                    {\n                    games.map((game) => {\n                        return <option value={`${game.id}`} key={`game--${game.id}`}>{game.title}</option>\n                    })\n                    }\n                </select>\n                </div>\n            </fieldset>\n\n            {/* TODO: create the rest of the input fields */}\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"description\">Description: </label>\n                    <input \n                    onChange={changeEventState}\n                        type=\"text\" id = 'description'  value = 'description' required autoFocus className=\"form-control\"\n                    />\n                </div>\n            </fieldset>\n\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"date\">Date of Event: </label>\n                    <input \n                        onChange={changeEventState}\n                        type=\"date\" value = 'date' required autoFocus className=\"form-control\"\n                        id = 'date'\n                    />\n                </div>\n            </fieldset>\n\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"time\">Start Time: </label>\n                    <input \n                        onChange={changeEventState}\n                        type=\"time\" value=\"time\" required autoFocus className=\"form-control\"\n                        id = 'time'\n                    />\n                </div>\n            </fieldset>\n            \n\n            <button type=\"submit\"\n                onClick={evt => {\n                    // Prevent form from being submitted\n                    evt.preventDefault()\n\n                    const event = {\n                        game: parseInt(currentEvent.game.id),\n                        description: currentEvent.description,\n                        date: currentEvent.date,\n                        time: currentEvent.time,\n                        gamer: parseInt(localStorage.getItem(\"level_user\"))\n                    }\n\n                    // Send POST request to your API\n                    updateEvent(event)\n                        .then(() => navigate(\"/events\"))\n                }}\n                className=\"btn btn-primary\">Update Event</button>\n        </form>\n    )\n} "],"mappings":"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"},"metadata":{},"sourceType":"module"}