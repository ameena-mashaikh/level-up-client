{"ast":null,"code":"var _jsxFileName = \"/home/ameenam/workspace/level-up-react-18-template/src/components/game/GameForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { createGame, getGameTypes, getGames } from '../../managers/GameManager.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GameForm = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [gameTypes, setGameTypes] = useState([]);\n  /*\n      Since the input fields are bound to the values of\n      the properties of this state variable, you need to\n      provide some default values.\n  */\n\n  const [currentGame, setCurrentGame] = useState({\n    skillLevel: 1,\n    numberOfPlayers: 0,\n    title: \"\",\n    maker: \"\",\n    gameTypeId: 0\n  });\n  useEffect(() => {\n    fetchIt(getGameTypes).then(type => {\n      setGameTypes(type);\n    }).catch(() => setGameTypes([]));\n  }, []);\n\n  const changeGameState = domEvent => {\n    // TODO: Complete the onChange function\n    domEvent.preventDefault();\n    fetchIt(getGames, {\n      method: \"POST\",\n      body: JSON.stringify(currentGame)\n    }).then(() => navigate.push(\"/games\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-2 btn-sep icon-create\",\n      onClick: () => {\n        navigate({\n          pathname: \"/games/new\"\n        });\n      },\n      children: \"Register New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"gameForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"gameForm__title\",\n        children: \"Register New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Title: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            required: true,\n            autoFocus: true,\n            className: \"form-control\",\n            value: currentGame.title,\n            onChange: changeGameState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Maker: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            autoFocus: true,\n            className: \"form-control\",\n            value: currentGame.maker,\n            onChange: changeGameState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"gameTypeId\",\n            children: \"Game Type: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"game_type_id\",\n            className: \"form-control\",\n            value: currentGame.gameTypeId,\n            onChange: handleControlledInputChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"0\",\n              children: \"Select a Game Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this), gameTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: type.id,\n              children: type.label\n            }, type.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"skillLevel\",\n            children: \"Skill Level: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"skill_level\",\n            min: \"0\",\n            max: \"10\",\n            required: true,\n            autoFocus: true,\n            className: \"form-control\",\n            value: currentGame.skillLevel,\n            onChange: changeGameState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"numberOfPlayers\",\n            children: \"Number of players: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"number_of_players\",\n            min: \"0\",\n            max: \"10\",\n            required: true,\n            autoFocus: true,\n            className: \"form-control\",\n            value: currentGame.numberOfPlayers,\n            onChange: changeGameState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: evt => {\n          // Prevent form from being submitted\n          evt.preventDefault();\n          const game = {\n            maker: currentGame.maker,\n            title: currentGame.title,\n            number_of_players: parseInt(currentGame.numberOfPlayers),\n            skill_level: parseInt(currentGame.skillLevel),\n            game_type: parseInt(currentGame.gameTypeId)\n          }; // Send POST request to your API\n\n          createGame(game).then(() => navigate(\"/games\"));\n        },\n        className: \"btn btn-primary\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GameForm, \"KRzDyki9mOWHSUkg3aZGFnN6o6o=\", false, function () {\n  return [useNavigate];\n});\n\n_c = GameForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameForm\");","map":{"version":3,"names":["useState","useEffect","useNavigate","createGame","getGameTypes","getGames","GameForm","navigate","gameTypes","setGameTypes","currentGame","setCurrentGame","skillLevel","numberOfPlayers","title","maker","gameTypeId","fetchIt","then","type","catch","changeGameState","domEvent","preventDefault","method","body","JSON","stringify","push","pathname","handleControlledInputChange","map","id","label","evt","game","number_of_players","parseInt","skill_level","game_type"],"sources":["/home/ameenam/workspace/level-up-react-18-template/src/components/game/GameForm.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport { useNavigate } from 'react-router-dom'\nimport { createGame, getGameTypes, getGames } from '../../managers/GameManager.js'\n\n\nexport const GameForm = () => {\n    const navigate = useNavigate()\n    const [gameTypes, setGameTypes] = useState([])\n\n    /*\n        Since the input fields are bound to the values of\n        the properties of this state variable, you need to\n        provide some default values.\n    */\n    const [currentGame, setCurrentGame] = useState({\n        skillLevel: 1,\n        numberOfPlayers: 0,\n        title: \"\",\n        maker: \"\",\n        gameTypeId: 0\n    })\n\n    useEffect(() => {\n        fetchIt(getGameTypes)\n            .then((type) => {\n                setGameTypes(type)\n            })\n            .catch(() => setGameTypes([]))\n    }, [])\n\n    const changeGameState = (domEvent) => {\n        // TODO: Complete the onChange function\n        domEvent.preventDefault()\n        fetchIt(\n            getGames,\n            { method: \"POST\", body: JSON.stringify(currentGame) }\n        )\n            .then(() => navigate.push(\"/games\"))\n        \n    }\n\n    return (\n        <>\n        <button className=\"btn btn-2 btn-sep icon-create\"\n            onClick={() => {\n            navigate({ pathname: \"/games/new\" })\n            }}>Register New Game\n        </button>\n        <form className=\"gameForm\">\n            <h2 className=\"gameForm__title\">Register New Game</h2>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\">Title: </label>\n                    <input type=\"text\" name=\"title\" required autoFocus className=\"form-control\"\n                        value={currentGame.title}\n                        onChange={changeGameState}\n                    />\n                </div>\n            </fieldset>\n\n            {/* TODO: create the rest of the input fields */}\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\">Maker: </label>\n                    <input type=\"text\" required autoFocus className=\"form-control\"\n                        value={currentGame.maker}\n                        onChange={changeGameState}\n                    />\n                </div>\n            </fieldset>\n\n            <fieldset>\n                <div className=\"form-group\">\n                <label htmlFor=\"gameTypeId\">Game Type: </label>\n                <select name=\"game_type_id\" className=\"form-control\"\n                    value={currentGame.gameTypeId}\n                    onChange={handleControlledInputChange}>\n\n                    <option value=\"0\">Select a Game Type</option>\n                    {\n                    gameTypes.map(type => (\n                        <option key={type.id} value={type.id}>\n                        {type.label}\n                        </option>\n                    ))\n                    }\n                </select>\n                </div>\n            </fieldset>\n\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"skillLevel\">Skill Level: </label>\n                    <input type=\"number\" name=\"skill_level\" min = \"0\" max = \"10\" required autoFocus className=\"form-control\"\n                        value={currentGame.skillLevel}\n                        onChange={changeGameState}\n                    />\n                </div>\n            </fieldset>\n            \n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"numberOfPlayers\">Number of players: </label>\n                    <input type=\"number\" name=\"number_of_players\" min = \"0\" max = \"10\" required autoFocus className=\"form-control\"\n                        value={currentGame.numberOfPlayers}\n                        onChange={changeGameState}\n                    />\n                </div>\n            </fieldset>\n\n            <button type=\"submit\"\n                onClick={evt => {\n                    // Prevent form from being submitted\n                    evt.preventDefault()\n\n                    const game = {\n                        maker: currentGame.maker,\n                        title: currentGame.title,\n                        number_of_players: parseInt(currentGame.numberOfPlayers),\n                        skill_level: parseInt(currentGame.skillLevel),\n                        game_type: parseInt(currentGame.gameTypeId)\n                    }\n\n                    // Send POST request to your API\n                    createGame(game)\n                        .then(() => navigate(\"/games\"))\n                }}\n                className=\"btn btn-primary\">Create</button>\n        </form></>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}